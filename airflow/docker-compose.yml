version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
    - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - airflow_net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  webserver:
    image: apache/airflow:2.9.3
    container_name: airflow_webserver
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env 
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      _PIP_ADDITIONAL_REQUIREMENTS: dbt-core dbt-postgres psycopg2-binary requests
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ../scripts:/opt/airflow/scripts  
      - ../data:/opt/airflow/data       
      - ../dbt:/opt/airflow/dbt          
    command: >
      bash -c "
        airflow db upgrade &&
        if ! airflow users list | grep -q ${AIRFLOW_ADMIN_EMAIL}; then
          echo 'Creating admin user...' &&
          airflow users create \
            --username ${AIRFLOW_ADMIN_USER} \
            --firstname ${AIRFLOW_ADMIN_FIRSTNAME} \
            --lastname ${AIRFLOW_ADMIN_LASTNAME} \
            --role Admin \
            --email ${AIRFLOW_ADMIN_EMAIL} \
            --password ${AIRFLOW_ADMIN_PASSWORD};
        else
          echo 'Admin user already exists.';
        fi &&
        exec airflow webserver
      "
    networks:
      - airflow_net

  scheduler:
    image: apache/airflow:2.9.3
    container_name: airflow_scheduler
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      _PIP_ADDITIONAL_REQUIREMENTS: dbt-core dbt-postgres psycopg2-binary requests
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ../scripts:/opt/airflow/scripts 
      - ../data:/opt/airflow/data       
      - ../dbt:/opt/airflow/dbt          
    command: scheduler
    networks:
      - airflow_net

networks:
  airflow_net:
    driver: bridge